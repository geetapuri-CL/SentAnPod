 Bang, bang. What's going on, guys? Hope you guys are really excited about this interview. I really enjoyed it. I think you will as well. But before we get into that, make sure that you like this video, so more people on YouTube can find it. Make sure you're subscribed to the channel. And don't forget that BlockFi is the sponsor today. They've got three products you can buy and sell crypto on their crypto exchange. You can deposit crypto and earn up to 8.6% APY in an interest-bearing account, or you can deposit crypto and take out a US dollar loan against your crypto collateral. You can use the description right here, or you can go to blockfi.com.  go way back and we could do the wavy lines would be literally back in fifth grade, Queens public schools, the days you could actually leave school and go home for lunch, which I can't even imagine my kids leaving school and going home for lunch. So in those days, I used to walk out of school myself at grade and walk to my father's publishing business, which was a few blocks away in Queens. And I would sit and play with punch card machines, index my comic books. I ended the next year in sixth grade, he had Pascal and Portran. And I was loving this idea back then.  college. And then, of course, Wall Street was a natural progression. And I spent about 20 years on Wall Street creating technology solutions, communicating with machines to do trading, to do execution, to do mutual funds, sales performance, accounts receivables. And just, again, the art of the possible was always what I love to do. I had about six patents in financial services, five of them are still in production today for Citigroup, Fortune 50 company where I worked. And then I joined another Fortune 50  And it wasn't just me, it was, you'd hear from my peers in the industry, all the consulting groups would say 93% of the projects being worked on fail to deliver any value. So Anthony, like if you're in business, you talk about two metrics to the board. You talk about, and I've done this hundreds of times, you say, are we delivering on time or on value, on dollar, basically. And that's what they call it, it's on time or on budget, two things. And it means nothing. It's like walking into our front of store and saying,  that's created on Quark to basically to fix the world, let's call it. And just a small little challenge there. We're going after a $500 billion total addressable market. And that's the start. We'll go above that after, but that's kind of where the journey's been on. That's awesome. And so you guys are in the no code business. What the hell is no code mean? So I love the question because everyone's like, there's code somewhere. Show us the code, show us where it is. And the reality is I have a team of engineers. I've got about a hundred of the  I mean, what an amazing story this week on Stripe and the results. You want to use Stripe to basically get a payment for a new subscriber in your company. You could drag in a text box for first name. You could drag in Stripe as a component. We already work with them and integrate with them. Oh, you want to use your bank account for your client. And all these components, we code the usable component that you'd simply drag and drop in. So it's a visual designer tool. And what's different about us than a Wix maybe, which is no code. Wix has no code and people have been using it  dragging and dropping. And so no code specifically is there's no ancient Greek. There's no, and for the first time you're getting scale at it and we don't generate code. We don't let you inject code. And which goes against all principles, everything that's out there today and all the technology is supporting engineers coding. We're basically saying it's a whole new way to create software. It's really what you're doing is if somebody kind of uses a consumer  I think through this, most people know Squarespace. They know other sorts of what I'll call consumer facing technology, right? Things that I want to build that have maybe not mission critical elements to it. But my understanding is what you guys are doing is you're building these no code solutions for some of the most important software and some of the most kind of mission critical software for our business and for very important large businesses. And so how does that change the way you think about building some of these no code  we said no code means no code you could inject, no code you generate. Really what we're saying is scale and applications for the first time, which means that you're on the same version of code. So you start building today. I'm going to make this up. You're going to start building an onboarding solution today for your customers using Encore. You're going to be using technology on the same version of software as every major bank, every major financial institution, every hospital, every healthcare provider,  And now you're locked in to a technology and you're not getting the benefit of what your partner did versus what you did. And basically you could separate that into divisions of a company. Every company division is starting with ground zero and they're not benefiting each other. They're not benefiting the company or the industry. What we did was we said, look, no one else could code, but us that's it. We're the ones coding the components. And what it does mean is that when a new business requirement comes in, for example,  code out there, it's gone. It's basically you're guaranteed to be on the same version of software, which means that you're going to benefit from the community of users all on the same platform, all testing, all cybersecurity testing and pen testing the same software. That's what no code means to us. That's exactly what it means and the difference for us. So how does this change kind of the software development process? So inside of an organization, obviously I still have software engineers. Now I have these new code tools. How do I change the way that I build products? It's a great point.  This is in what we call the waterfall approach, traditional waterfall approach. And then at the end of the year, technology would become lawyers. I've done it. When you become an attorney, you're like, well, business, let me show you, this is what you said you want, but this is what I did. You didn't tell me you needed a button on the screen to submit and save. So we didn't put a button on the screen to save, so the application doesn't save. That's what's happening today. And I know that's a little bit extreme. On the agile approach, which I was one of the first pioneers of agile in large corporations, and the idea of moving  They could actually start to configure the screens and the rules and the integrations and they could do the design. They then work with a technologist to do that last piece all in on Quark, the integration mapping, the data mapping to the legacy systems, to the core systems, the books and records, all the complexity around that that's done inside on Quark. And then outside is a unified platform. And the reality is what we're finding is we're shortening the coding time with 200 times faster than the Java design.  And there's no risk to deployment, no risk to change. If you didn't get it right the first time, we'll get it right the second time immediately here. That's what's different. It's also resulting in three times cheaper is what we're hearing back from customers than anything they've seen. So that's three times the metric no one's ever achieved in technology before. You've heard 30% better or 50% better sometimes, but three times. But most importantly, Anthony, what we've actually now done, we came up with what we call line of code equivalency.  And people don't talk about defects, but for every like 50 lines of code, there's one defect traditionally that's available there. I mean, squiggly brackets are hard to get right and semicolons and it's names and everything's case sensitive for those who don't know, it's hard to code. I mean, I look at banks that talk about, you can read about banks telling that they're going to train their traders on Python. And I look at that and I'm like, you want sympathy from them. You're trying to basically create sympathy.  on the backend, it's in the software development process, it's in the integration into the business. Do the users of the software, if I'm somebody who's signing up through that payment flow, if I'm somebody who's leveraging it as an internal or external customer, do I tell any difference between code that was custom written versus the no code product? No. We are so proud to be invisible to the world. You might be using us in a bank today, you might be using us in healthcare, you might be using us in public sector or insurance. We're completely invisible  And so the idea is we're a platform to create software. No one ever should know that we exist. You shouldn't know we're storing your data. We're encrypting your data. We're doing it in a way which banks trust us with their customer data when they wouldn't trust any other technology. And because we come from that world, we understand that world. And so with that, it's done very differently. We don't exist. We take on your experience, your user experience. So in some cases, Anthony, like so New York City,  this COVID things come. And this time was, we were joking before the call, I think, but like this time I was just coming back from presenting at Montgomery Center in California. I was coming back to LA, there was people wearing masks and I thought they were crazy. I'm like, what's, what's going on here? So, so we actually received the call on Friday at 5pm. On Monday morning, we demoed a production ready secured system that I really went through pen testing, vulnerability assessment, performance assessing to handle all 20 million requests. And we became the system of record. And we basically  without one engineer standing up. And the coolest thing was, and this is what I get to tell my kids about, which was, they came back and said, we need to get food to senior citizens. And if you were in New York City, which you were, if you ever saw a national guard loading a box into a taxi at any point, there's all these hubs in Brooklyn and New York City, and that was powered by Encore, 100%. We basically created the equivalent of Seamless Web, the company, and New York City created it  today is middle school years with Acme. It's uncomfortable. You walk into a hospital or a doctor's office, you're given paper and a pen still today. How does this change the recruiting? When I start to think about exactly what you're talking about here, normally, if you wanted to build this type of reach, this type of efficacy inside of any software-related company, you'd have to go hire not 100 engineers. You'd probably have to hire 1,000 or 2,000 engineers.  It's amazing. I think so. I come as a CIO, right? So I actually ran Fortune 50 technology groups my whole life. We're selling to the business about 80% of the time today. And so the business is basically saying, we need a solution. We have never seen a solution. We've been waiting years for the solution. This is the solution. I could get in in three weeks, four weeks, and I'm done. So a lot of times that's actually how we see the sell. Now, with that said, you could look at our investors. Goldman Sachs, let us seriously say, they were an investor before.  technology as fast as they can to the business. And there are visionary technologists who say, I know that if you could do this, you could do 90% of what I do today, then I could devote 100% of my engineers to something better than they're not doing today. So I definitely there's no shortage of engineers. Anyone saying a shortage of engineers, it's just the wrong technologies. That's what it comes down to. However, I also wouldn't say that we're going to be the cause of 50,000 engineers in a bank to disappear tomorrow.  the engineers to basically take on bigger and better responsibilities, freeing them up to do things they should be doing instead of what I would call the misery that they're loaded down with today. Well, this is the whole idea that basically machines will replace all the rudimentary kind of elementary tasks that we have. And what it does is, as it has done many, many times over the history of human existence, is it will free humans up to do the more creative, harder to replicate type work.  of like, I guess it's the 1500s when a queen was presented by a inventor of the new sewing machine called the Yarn, you know, and she's like, what are all my, what are all the people doing this today going to do for work? So she exiled him to Paris to die in poverty where he did. And that's a true story. Like in reality, that it's time to move forward with this because for 30 years, I still look back at the punch card machine I was indexing comic books on or the Pascal and Fortran, nothing's changed. It's still, even with all the discussion of cloud computing,  Got it. And so when you start to think about kind of the big challenges moving forward, what are the biggest obstacles you guys face? So number one is this, the category that was created years back, low code, no code. Absolutely every company that's 15 years old is suddenly rebranding themselves and remarketing themselves to be in this category. And the category itself is not defined properly because the category has historically been plagued by a concept that if you enable the engineering  We're kind of at that point right now where, you know, everyone's rebranding themselves as a smartphone around us in many ways. And reality is we're saying everyone's looking at the wrong category. We're actually, it's not just a tool and a tool bolt for an engineer to do what they did yesterday, do it tomorrow. It's to free up the engineer, do something completely different. So to me, it's around the categorization is what I'm really fascinated by. And that's where we're, I'm really interested about what we enable in the future, Anthony.  to add your daughter to the policy. And by the way, would you like a Gerber like insurance policy? And by the way, would you like to add them as a beneficiary to your will? And by the way, would you like, and I can continue that journey to say the congratulations, they got a driver's license. Would you like us to add them to the policy here? The insurance you bought a home would you like? And I just think about how disconnected the world is right now and the data. I mean, there's nothing more than, than the pandemic to show us how we are not digital. We are definitely in seventh grade with acne as far as  he's going to invent the real flying car and it's going to be powered by lightning. I love this idea, but that's what I'm hoping 25 years is. But reality is, as it comes to code and no code, you know, even in five years from now, I would hope that we start to look back and look at a company and say, first off, what are you doing to address your legacy? So on Cork is the first solution. There is no more legacy. What I mean by that, Anthony, is if you created a solution today on Cork and tomorrow there's a holographic interface  No one knew it even occurred. It's just invisible. So we could migrate customers in one fell swoop to the latest technology, so the more legacy I look back at what's happening today in corporations and I think about robotics, RPA. And it's a technology that's been around for 20 years. It's putting a layer on top of the technology that's there, the legacy and saying, let's push it under the cover further and pretend it's okay. So I'm hoping in 25 years, there's no more legacy.  So far, do you want any boards? I gotta ask. You must be. A few. But a few. So as a CIO who used to present to public boards, I can tell you what's happening right now is the boards are starting to ask their CEO and their leadership team. So what are you doing about this low code, no code space, which up? And it's, what are we doing there? And what the technologists who I will call, I'm gonna call them more technologists  But I'm going to pick it up and drive it to Amazon's data center and ask them to rack it for me in their cloud. And no one would ever do that. No one would ever think like, if I give them this server, could they rack it for me? I know there's no spare parts. It's going to break. It's going to be insecure. It can't be patched, can't be supported. No one knows how to support it. It won't be compliant or compatible. Why would I ever do that? And yet that's exactly what we're doing today when we take our code and host it in someone else's software. It's exactly the same thing. Here's my legacy code.  anyone listening from the business, your podcast, we simply say ask the question, simply ask the technologist, number one, if we choose that solution, is it going to upgrade automatically to the latest technology or are we going to have legacy tomorrow here? That's it, one simple question. And there's only one technology at the end of that that doesn't, which is us. So it's pretty cool to be in that spot. Good question for you then if they answer. It's a good question for me. We're going to try. Yeah. I mean, Anthony, the other question, which I love is,  So if we change the way we actually compensate to say it's based on your value, bring the company, technologists will stop trying to hire engineers for the sake of headcount and budget status. That's kind of where, so it's my own belief there. That's a personal belief that I've seen in the past. I'd love to see change. Makes sense to me. Before I let you go ask everyone the same three questions and then you have to ask me one to finish up. The first is what's the most important book that you've ever read? So I mean, look, enjoyable book is Ready Player One, just because I love the 80s and I love the idea that that was  I might not solve the problem. I might have to give up, but I'm going to try my best to do it and I'll try again tomorrow if I don't. I love it. Next question is brought to you by our friends over at 8 sleep. I sleep five or six hours. Now I sleep on their thermoregulated bed. I turn it basically as cold as I possibly can, like an ice cube, sleep eight or nine hours. And they have fully converted me to this like sleep religion and how important it is. What is your sleep schedule and how has that changed over time? So when I created Unquark, I probably wasn't  to think and it's probably the best life lessons in Candy Crush, which is, you know, it's about luck. It's about trying the same thing over and over again. You're going to basically go insane. This definition goes, if you keep thinking it's going to get a different result every time you try something, it's the definition of insanity. And, you know, it's basically just something to watch things explode, which is nothing wrong with that before going to bed. I love it. Last question you get to ask me one is aliens. Are you a believer or non-believer? Believer and non-believer. I have to believe that we are not the only  What is your favorite book? Can I ask? What is your favorite book?  dollars to buy the domain. And instead, it was a $1,495 purchase of GoDaddy. And that's kind of where we are. And of course, everyone's welcome looking up on LinkedIn. I would love it. Connect with me on LinkedIn and you'll find me there. Awesome. Awesome, Gary. Listen, thank you so much for doing this. You guys have built an amazing company. I'm a big fan, so keep it up and we'll do it again in the future. I can't wait. Thank you, Anthony. Thanks again. Have a great day.